Exercise: Pass a parameter using a query string.

Step 1: 

public IActionResult ProductsThatCostMoreThan(decimal? price) 
    { 
      if (!price.HasValue) 
      { 
        return NotFound("You must pass a product price in the query
        string, for example, /Home/ProductsThatCostMoreThan?price=50"); 
      } 
      var model = db.Products.Include(p => p.Category).Include( 
        p => p.Supplier).Where(p => p.UnitPrice > price).ToArray(); 
      if (model.Count() == 0) 
      { 
        return NotFound($"No products cost more than {price:C}."); 
      } 
      ViewData["MaxPrice"] = price.Value.ToString("C"); 
      return View(model); // pass model to view 
    } 

Step 2: 

    @model IEnumerable<Packt.CS7.Product> 
    @{ 
      ViewData["Title"] =  
        "Products That Cost More Than " + ViewData["MaxPrice"]; 
    } 
    <h2>Products That Cost More Than @ViewData["MaxPrice"]</h2> 
    <table class="table"> 
      <tr> 
        <th> 
          @Html.DisplayNameFor( 
            model => model.Category.CategoryName) 
        </th> 
        <th> 
          @Html.DisplayNameFor(model => model.Supplier.CompanyName) 
        </th> 
        <th> 
          @Html.DisplayNameFor(model => model.ProductName) 
        </th> 
        <th> 
          @Html.DisplayNameFor(model => model.UnitPrice) 
        </th> 
        <th> 
          @Html.DisplayNameFor(model => model.UnitsInStock) 
        </th> 
      </tr> 
      @foreach (var item in Model) 
      { 
      <tr> 
        <td> 
          @Html.DisplayFor(modelItem => item.Category.CategoryName) 
        </td> 
        <td> 
          @Html.DisplayFor(modelItem => item.Supplier.CompanyName) 
        </td> 
        <td> 
          @Html.DisplayFor(modelItem => item.ProductName) 
        </td> 
        <td> 
          @Html.DisplayFor(modelItem => item.UnitPrice) 
        </td> 
        <td> 
          @Html.DisplayFor(modelItem => item.UnitsInStock) 
        </td> 
      </tr> 
      } 
    </table> 
